import express, { Request, Response } from "express";
import mongoose from "mongoose";

const app = express();
app.use(express.json());

mongoose.connect("mongodb://localhost:27017/renfeDB");

const userSchema = new mongoose.Schema({
  userid: String,
  name: String,
  coins: Number
});

const trainSchema = new mongoose.Schema({
  from: String,
  to: String,
  departure: String,
  arrival: String,
  price: Number
});

const User = mongoose.model("User", userSchema);
const Train = mongoose.model("Train", trainSchema);

// Chatbot endpoint
app.post("/chat", async (req: Request, res: Response) => {
  const { userid, question } = req.body;
  const q = question.toLowerCase();

  // Obtener usuario
  const user = await User.findOne({ userid });
  if (!user) return res.json({ answer: "Usuario no encontrado" });

  // Parseo de preguntas
  let answer = "No entendÃ­ tu pregunta ðŸ˜•";

  if (q.includes("cuantos puntos") || q.includes("coins")) {
    answer = `Tienes ${user.coins} puntos ðŸ’°`;
  }
  else if (q.includes("trenes disponibles") || q.includes("trenes hoy")) {
    const trains = await Train.find();
    if (trains.length === 0) answer = "No hay trenes disponibles";
    else answer = trains.map(t => `De ${t.from} a ${t.to} - Sale: ${t.departure} Llega: ${t.arrival}`).join("\n");
  }
  else {
    const match = q.match(/de (\w+) a (\w+)/);
    if (match) {
      const from = match[1];
      const to = match[2];
      const train = await Train.findOne({ from, to });
      if (!train) answer = `No hay trenes de ${from} a ${to}`;
      else answer = `Tren de ${from} a ${to} - Sale: ${train.departure} Llega: ${train.arrival} Precio: ${train.price}â‚¬`;
    }
  }

  res.json({ answer });
});

app.listen(3000, () => console.log("Servidor corriendo en http://localhost:3000"));
